["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$process",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$set-print-fn!","~$run!"]],"~:name","~$doo.runner","~:imports",null,"~:requires",["^ ","~$cljs.test","^=","~$gobj","~$goog.object","^?","^?","~$karma","~$jx.reporter.karma","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$successful?","^="],"~:defs",["^ ","^7",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","~:line",12,"~:column",16,"~:end-line",12,"~:end-column",29,"~:export",true,"~:arglists",["~#list",["~$quote",["^O",[["~$f"]]]]]],"^9","~$doo.runner/set-print-fn!","^H","cljs-test-runner-out/doo/runner.cljs","^L",29,"~:method-params",["^O",[["~$f"]]],"~:protocol-impl",null,"^M",true,"~:arglists-meta",["^O",[null,null]],"^J",1,"~:variadic?",false,"^I",12,"^K",12,"~:max-fixed-arity",1,"~:fn-var",true,"^N",["^O",["^P",["^O",[["~$f"]]]]]],"~$karma?",["^ ","^F",null,"^G",["^ ","^H","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","^I",18,"^J",7,"^K",18,"^L",13,"^N",["^O",["^P",["^O",[[]]]]]],"^9","~$doo.runner/karma?","^H","cljs-test-runner-out/doo/runner.cljs","^L",13,"^R",["^O",[[]]],"^S",null,"^T",["^O",[null,null]],"^J",1,"^U",false,"^I",18,"~:ret-tag","~$boolean","^K",18,"^V",0,"^W",true,"^N",["^O",["^P",["^O",[[]]]]]],"~$*exit-fn*",["^ ","^G",["^ ","^H","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","^I",28,"^J",16,"^K",28,"^L",25,"~:dynamic",true],"^9","~$doo.runner/*exit-fn*","^H","cljs-test-runner-out/doo/runner.cljs","^L",25,"^J",1,"^11",true,"^I",28,"^K",28,"~:tag","~$any"],"~$set-exit-point!",["^ ","^F",null,"^G",["^ ","^H","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","^I",30,"^J",16,"^K",30,"^L",31,"^M",true,"^N",["^O",["^P",["^O",[["~$f"]]]]],"~:doc","Sets the fn to be called when exiting the script.\n   It should take one bool argument: successful?"],"^9","~$doo.runner/set-exit-point!","^H","cljs-test-runner-out/doo/runner.cljs","^L",31,"^R",["^O",[["~$f"]]],"^S",null,"^M",true,"^T",["^O",[null,null]],"^J",1,"^U",false,"^I",30,"^K",30,"^V",1,"^W",true,"^N",["^O",["^P",["^O",[["~$f"]]]]],"^16","Sets the fn to be called when exiting the script.\n   It should take one bool argument: successful?"],"~$exit!",["^ ","^F",null,"^G",["^ ","^H","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","^I",37,"^J",7,"^K",37,"^L",12,"^N",["^O",["^P",["^O",[["~$success?"]]]]]],"^9","~$doo.runner/exit!","^H","cljs-test-runner-out/doo/runner.cljs","^L",12,"^R",["^O",[["^19"]]],"^S",null,"^T",["^O",[null,null]],"^J",1,"^U",false,"^I",37,"^K",37,"^V",1,"^W",true,"^N",["^O",["^P",["^O",[["^19"]]]]]],"^8",["^ ","^F",null,"^G",["^ ","^H","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","^I",53,"^J",16,"^K",53,"^L",20,"^M",true,"^N",["^O",["^P",["^O",[["~$a"]]]]]],"^9","~$doo.runner/run!","^H","cljs-test-runner-out/doo/runner.cljs","^L",20,"^R",["^O",[["~$a"]]],"^S",null,"^M",true,"^T",["^O",[null,null]],"^J",1,"^U",false,"^I",53,"^Z",["^6",[null,"^14"]],"^K",53,"^V",1,"^W",true,"^N",["^O",["^P",["^O",[["~$a"]]]]]],"~$set-entry-point!",["^ ","^F",null,"^G",["^ ","^H","/Users/jlynch/Exercism/clojurescript/two-fer/cljs-test-runner-out/doo/runner.cljs","^I",71,"^J",7,"^K",71,"^L",23,"^N",["^O",["^P",["^O",[["~$f"]]]]],"^16","Sets the function to be run when starting the script"],"^9","~$doo.runner/set-entry-point!","^H","cljs-test-runner-out/doo/runner.cljs","^L",23,"^R",["^O",[["~$f"]]],"^S",null,"^T",["^O",[null,null]],"^J",1,"^U",false,"^I",71,"^K",71,"^V",1,"^W",true,"^N",["^O",["^P",["^O",[["~$f"]]]]],"^16","Sets the function to be run when starting the script"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^=","^=","^@","^A","^A","^A"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:ns","~:jx.reporter.karma/karma","~:end-run-tests","~:cljs.test/default","~:begin-test-ns"]],"~:order",["^1C","^1F","^1B","^1E","^1D"]],"^16",null]